# Generated by Yosys 0.9+3683 (git sha1 b7d46be4, clang 10.0.0-4ubuntu1 -fPIC -Os)

.model i2c_master_top
.inputs wb_clk_i wb_rst_i arst_i wb_adr_i[0] wb_adr_i[1] wb_adr_i[2] wb_dat_i[0] wb_dat_i[1] wb_dat_i[2] wb_dat_i[3] wb_dat_i[4] wb_dat_i[5] wb_dat_i[6] wb_dat_i[7] wb_we_i wb_stb_i wb_cyc_i scl_pad_i sda_pad_i
.outputs wb_dat_o[0] wb_dat_o[1] wb_dat_o[2] wb_dat_o[3] wb_dat_o[4] wb_dat_o[5] wb_dat_o[6] wb_dat_o[7] wb_ack_o wb_inta_o scl_pad_o scl_padoen_o sda_pad_o sda_padoen_o tip_o DrivingI2cBusOut TP1 TP2
.names $false
.names $true
1
.names $undef
.names byte_controller.core_cmd[0] byte_controller.core_cmd[4] byte_controller.core_cmd[3] byte_controller.core_cmd[2] DrivingI2cBusOut
0001 1
0010 1
0011 1
0100 1
0101 1
0110 1
0111 1
1000 1
1001 1
1010 1
1011 1
1100 1
1101 1
1110 1
1111 1
.names byte_controller.bit_controller.cnt[3] byte_controller.bit_controller.cnt[2] TP2 TP1 TP1_$lut_A_Y
0000 1
.names byte_controller.bit_controller.dSCL_$lut_A_1_Y TP1_$lut_A_Y_$lut_A_A TP1_$lut_A_Y TP1_$lut_A_Y_$lut_A_A_1 TP1_$lut_A_Y_$lut_A_A_2 TP1_$lut_A_Y_$lut_A_Y
00000 1
00001 1
00010 1
00011 1
00100 1
00101 1
00110 1
00111 1
01000 1
01001 1
01010 1
01011 1
01100 1
01101 1
01110 1
01111 1
11111 1
.names byte_controller.bit_controller.cnt[15] byte_controller.bit_controller.cnt[14] byte_controller.bit_controller.cnt[13] byte_controller.bit_controller.cnt[12] TP1_$lut_A_Y_$lut_A_A
0000 1
.names byte_controller.bit_controller.cnt[7] byte_controller.bit_controller.cnt[6] byte_controller.bit_controller.cnt[5] byte_controller.bit_controller.cnt[4] TP1_$lut_A_Y_$lut_A_A_1
0000 1
.names byte_controller.bit_controller.cnt[11] byte_controller.bit_controller.cnt[10] byte_controller.bit_controller.cnt[9] byte_controller.bit_controller.cnt[8] TP1_$lut_A_Y_$lut_A_A_2
0000 1
.subckt adder a=TP1 b=$false cin=TP1_adder_a_cin cout=TP1_adder_a_cout sumout=TP1_dffre_Q_D_$lut_Y_A
.subckt adder a=$true b=$true cout=TP1_adder_a_cin
.subckt dffre C=wb_clk_i D=TP1_dffre_Q_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=TP1 R=arst_i
.names TP1_dffre_Q_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y TP1_dffre_Q_D
10 1
.subckt adder a=TP2 b=$true cin=TP1_adder_a_cout cout=TP2_adder_a_cout sumout=TP2_dffre_Q_D_$lut_Y_A
.subckt adder a=byte_controller.bit_controller.cnt[2] b=$true cin=TP2_adder_a_cout cout=TP2_adder_a_cout_adder_cin_cout sumout=byte_controller.bit_controller.cnt_dffre_Q_13_D_$lut_Y_A
.subckt dffre C=wb_clk_i D=TP2_dffre_Q_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=TP2 R=arst_i
.names TP2_dffre_Q_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y TP2_dffre_Q_D
10 1
.subckt dffr C=wb_clk_i D=al_dffr_Q_D Q=al R=arst_i
.names al wb_rst_i byte_controller.start al_dffr_Q_D
100 1
.subckt frac_lut6 in[5]=al in[4]=byte_controller.din[5] in[3]=byte_controller.read in[2]=wb_adr_i[1] in[1]=wb_adr_i[0] in[0]=wb_adr_i[2] lut6_out=al_frac_lut6_in_lut6_out
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_7_Y[3] E=byte_controller.ack_in_dffre_Q_E Q=byte_controller.ack_in R=arst_i
.names byte_controller.ack_in_dffre_Q_E byte_controller.cmd_ack wb_we_i wb_ack_o byte_controller.ack_in_dffre_Q_E_$lut_A_Y
0100 1
0101 1
0110 1
1000 1
1001 1
1010 1
1011 1
1100 1
1101 1
1110 1
1111 1
.subckt frac_lut6 in[5]=wb_adr_i[0] in[4]=wb_adr_i[1] in[3]=wb_we_i in[2]=wb_adr_i[2] in[1]=wb_ack_o in[0]=wb_rst_i lut6_out=byte_controller.ack_in_dffre_Q_E
.subckt frac_lut6 in[5]=byte_controller.ack_in in[4]=byte_controller.c_state[5] in[3]=byte_controller.dout[7] in[2]=byte_controller.c_state[3] in[1]=byte_controller.bit_controller.cmd_ack in[0]=wb_rst_i lut6_out=byte_controller.core_txd_dffr_Q_D
.subckt frac_lut6 in[5]=byte_controller.din[3] in[4]=byte_controller.ack_in in[3]=byte_controller.dout[3] in[2]=wb_adr_i[1] in[1]=wb_adr_i[0] in[0]=wb_adr_i[2] lut6_out=cr_frac_lut6_in_lut6_out[3]
.names byte_controller.ack_out wb_rst_i rxack_dffr_Q_D
10 1
.subckt dffre C=wb_clk_i D=byte_controller.ack_out_dffre_Q_D E=byte_controller.ack_out_dffre_Q_E Q=byte_controller.ack_out R=arst_i
.names wb_rst_i byte_controller.c_state[3] byte_controller.bit_controller.cmd_ack byte_controller.ack_out_dffre_Q_E
011 1
100 1
101 1
110 1
111 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.busy_dffr_Q_D Q=byte_controller.bit_controller.busy R=arst_i
.subckt frac_lut6 in[5]=byte_controller.bit_controller.busy in[4]=byte_controller.din[6] in[3]=byte_controller.stop in[2]=wb_adr_i[1] in[1]=wb_adr_i[0] in[0]=wb_adr_i[2] lut6_out=byte_controller.bit_controller.busy_frac_lut6_in_lut6_out
.names byte_controller.bit_controller.cSCL[0] wb_rst_i byte_controller.bit_controller.cSCL_dffr_Q_D
10 1
.names byte_controller.bit_controller.cSCL[1] wb_rst_i byte_controller.bit_controller.fSCL_dffse_Q_2_D
01 1
10 1
11 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.cSCL_dffr_Q_D Q=byte_controller.bit_controller.cSCL[1] R=arst_i
.subckt dffr C=wb_clk_i D=scl_pad_i_$lut_A_Y Q=byte_controller.bit_controller.cSCL[0] R=arst_i
.names byte_controller.bit_controller.cSDA[0] wb_rst_i byte_controller.bit_controller.cSDA_dffr_Q_D
10 1
.names byte_controller.bit_controller.cSDA[1] wb_rst_i byte_controller.bit_controller.fSDA_dffse_Q_2_D
01 1
10 1
11 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.cSDA_dffr_Q_D Q=byte_controller.bit_controller.cSDA[1] R=arst_i
.subckt dffr C=wb_clk_i D=sda_pad_i_$lut_A_Y Q=byte_controller.bit_controller.cSDA[0] R=arst_i
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_D Q=byte_controller.bit_controller.c_state[17] R=arst_i
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_1_D Q=byte_controller.bit_controller.c_state[16] R=arst_i
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_10_D Q=byte_controller.bit_controller.c_state[7] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[8] byte_controller.bit_controller.c_state[7] byte_controller.bit_controller.c_state_dffr_Q_10_D
0001 1
0011 1
1010 1
1011 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_11_D Q=byte_controller.bit_controller.c_state[6] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[7] byte_controller.bit_controller.c_state[6] byte_controller.bit_controller.c_state_dffr_Q_11_D
0001 1
0011 1
1010 1
1011 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_12_D Q=byte_controller.bit_controller.c_state[5] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[6] byte_controller.bit_controller.c_state[5] byte_controller.bit_controller.c_state_dffr_Q_12_D
0001 1
0011 1
1010 1
1011 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_13_D Q=byte_controller.bit_controller.c_state[4] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[4] byte_controller.bit_controller.c_state[0] byte_controller.core_cmd[2] byte_controller.bit_controller.c_state_dffr_Q_13_D
00100 1
00101 1
00110 1
00111 1
10011 1
10111 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_14_D Q=byte_controller.bit_controller.c_state[3] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[4] byte_controller.bit_controller.c_state[3] byte_controller.bit_controller.c_state_dffr_Q_14_D
0001 1
0011 1
1010 1
1011 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_15_D Q=byte_controller.bit_controller.c_state[2] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[3] byte_controller.bit_controller.c_state[2] byte_controller.bit_controller.c_state_dffr_Q_15_D
0001 1
0011 1
1010 1
1011 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_16_D Q=byte_controller.bit_controller.c_state[1] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[2] byte_controller.bit_controller.c_state[1] byte_controller.bit_controller.c_state_dffr_Q_16_D
0001 1
0011 1
1010 1
1011 1
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[17] byte_controller.bit_controller.c_state[16] byte_controller.bit_controller.c_state_dffr_Q_1_D
0001 1
0011 1
1010 1
1011 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_2_D Q=byte_controller.bit_controller.c_state[15] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[16] byte_controller.bit_controller.c_state[15] byte_controller.bit_controller.c_state_dffr_Q_2_D
0001 1
0011 1
1010 1
1011 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_3_D Q=byte_controller.bit_controller.c_state[14] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[15] byte_controller.bit_controller.c_state[14] byte_controller.bit_controller.c_state_dffr_Q_3_D
0001 1
0011 1
1010 1
1011 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_4_D Q=byte_controller.bit_controller.c_state[13] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[14] byte_controller.bit_controller.c_state[13] byte_controller.bit_controller.c_state_dffr_Q_4_D
0001 1
0011 1
1010 1
1011 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_5_D Q=byte_controller.bit_controller.c_state[12] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[12] byte_controller.bit_controller.c_state[0] byte_controller.core_cmd[3] byte_controller.bit_controller.c_state_dffr_Q_5_D
00100 1
00101 1
00110 1
00111 1
10011 1
10111 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_6_D Q=byte_controller.bit_controller.c_state[11] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[12] byte_controller.bit_controller.c_state[11] byte_controller.bit_controller.c_state_dffr_Q_6_D
0001 1
0011 1
1010 1
1011 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_7_D Q=byte_controller.bit_controller.c_state[10] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[11] byte_controller.bit_controller.c_state[10] byte_controller.bit_controller.c_state_dffr_Q_7_D
0001 1
0011 1
1010 1
1011 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_8_D Q=byte_controller.bit_controller.c_state[9] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[10] byte_controller.bit_controller.c_state[9] byte_controller.bit_controller.c_state_dffr_Q_8_D
0001 1
0011 1
1010 1
1011 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.c_state_dffr_Q_9_D Q=byte_controller.bit_controller.c_state[8] R=arst_i
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[8] byte_controller.bit_controller.c_state[0] byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[5] byte_controller.bit_controller.c_state_dffr_Q_9_D
00100 1
00101 1
00110 1
00111 1
10011 1
10111 1
.names byte_controller.bit_controller.clk_en wb_rst_i byte_controller.bit_controller.c_state[17] byte_controller.bit_controller.c_state[0] byte_controller.core_cmd[4] byte_controller.bit_controller.c_state_dffr_Q_D
00100 1
00101 1
00110 1
00111 1
10011 1
10111 1
.subckt dffs C=wb_clk_i D=byte_controller.bit_controller.c_state_dffs_Q_D Q=byte_controller.bit_controller.c_state[0] S=arst_i
.names wb_rst_i byte_controller.bit_controller.clk_en byte_controller.bit_controller.c_state_dffs_Q_D_$lut_Y_A byte_controller.bit_controller.c_state[0] byte_controller.bit_controller.c_state_dffs_Q_D_$lut_Y_A_1 byte_controller.bit_controller.c_state_dffs_Q_D
00010 1
00011 1
00110 1
00111 1
01000 1
01001 1
01010 1
01011 1
01111 1
10000 1
10001 1
10010 1
10011 1
10100 1
10101 1
10110 1
10111 1
11000 1
11001 1
11010 1
11011 1
11100 1
11101 1
11110 1
11111 1
.names byte_controller.bit_controller.c_state[13] byte_controller.bit_controller.c_state[9] byte_controller.bit_controller.c_state[5] byte_controller.bit_controller.c_state[1] byte_controller.bit_controller.c_state_dffs_Q_D_$lut_Y_A
0000 1
.names byte_controller.core_cmd[4] byte_controller.core_cmd[3] byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[5] byte_controller.core_cmd[2] byte_controller.bit_controller.c_state_dffs_Q_D_$lut_Y_A_1
0000 1
.subckt dffs C=wb_clk_i D=TP1_$lut_A_Y_$lut_A_Y Q=byte_controller.bit_controller.clk_en S=arst_i
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.cmd_ack_dffr_Q_D Q=byte_controller.bit_controller.cmd_ack R=arst_i
.subckt frac_lut6 in[5]=byte_controller.bit_controller.c_state[2] in[4]=byte_controller.bit_controller.c_state[6] in[3]=byte_controller.bit_controller.c_state[10] in[2]=byte_controller.bit_controller.c_state[14] in[1]=wb_rst_i in[0]=byte_controller.bit_controller.clk_en lut6_out=byte_controller.bit_controller.cmd_ack_dffr_Q_D
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.cnt_dffre_Q_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=byte_controller.bit_controller.cnt[15] R=arst_i
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.cnt_dffre_Q_1_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=byte_controller.bit_controller.cnt[14] R=arst_i
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.cnt_dffre_Q_10_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=byte_controller.bit_controller.cnt[5] R=arst_i
.names byte_controller.bit_controller.cnt_dffre_Q_10_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.cnt_dffre_Q_10_D
10 1
.subckt adder a=byte_controller.bit_controller.cnt[5] b=$true cin=byte_controller.bit_controller.cnt_dffre_Q_11_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.cnt_dffre_Q_10_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.cnt_dffre_Q_10_D_$lut_Y_A
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.cnt_dffre_Q_11_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=byte_controller.bit_controller.cnt[4] R=arst_i
.names byte_controller.bit_controller.cnt_dffre_Q_11_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.cnt_dffre_Q_11_D
10 1
.subckt adder a=byte_controller.bit_controller.cnt[4] b=$true cin=byte_controller.bit_controller.cnt_dffre_Q_12_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.cnt_dffre_Q_11_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.cnt_dffre_Q_11_D_$lut_Y_A
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.cnt_dffre_Q_12_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=byte_controller.bit_controller.cnt[3] R=arst_i
.names byte_controller.bit_controller.cnt_dffre_Q_12_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.cnt_dffre_Q_12_D
10 1
.subckt adder a=byte_controller.bit_controller.cnt[3] b=$true cin=TP2_adder_a_cout_adder_cin_cout cout=byte_controller.bit_controller.cnt_dffre_Q_12_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.cnt_dffre_Q_12_D_$lut_Y_A
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.cnt_dffre_Q_13_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=byte_controller.bit_controller.cnt[2] R=arst_i
.names byte_controller.bit_controller.cnt_dffre_Q_13_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.cnt_dffre_Q_13_D
10 1
.names byte_controller.bit_controller.cnt_dffre_Q_1_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.cnt_dffre_Q_1_D
10 1
.subckt adder a=byte_controller.bit_controller.cnt[14] b=$true cin=byte_controller.bit_controller.cnt_dffre_Q_2_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.cnt_dffre_Q_1_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.cnt_dffre_Q_1_D_$lut_Y_A
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.cnt_dffre_Q_2_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=byte_controller.bit_controller.cnt[13] R=arst_i
.names byte_controller.bit_controller.cnt_dffre_Q_2_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.cnt_dffre_Q_2_D
10 1
.subckt adder a=byte_controller.bit_controller.cnt[13] b=$true cin=byte_controller.bit_controller.cnt_dffre_Q_3_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.cnt_dffre_Q_2_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.cnt_dffre_Q_2_D_$lut_Y_A
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.cnt_dffre_Q_3_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=byte_controller.bit_controller.cnt[12] R=arst_i
.names byte_controller.bit_controller.cnt_dffre_Q_3_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.cnt_dffre_Q_3_D
10 1
.subckt adder a=byte_controller.bit_controller.cnt[12] b=$true cin=byte_controller.bit_controller.cnt_dffre_Q_4_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.cnt_dffre_Q_3_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.cnt_dffre_Q_3_D_$lut_Y_A
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.cnt_dffre_Q_4_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=byte_controller.bit_controller.cnt[11] R=arst_i
.names byte_controller.bit_controller.cnt_dffre_Q_4_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.cnt_dffre_Q_4_D
10 1
.subckt adder a=byte_controller.bit_controller.cnt[11] b=$true cin=byte_controller.bit_controller.cnt_dffre_Q_5_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.cnt_dffre_Q_4_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.cnt_dffre_Q_4_D_$lut_Y_A
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.cnt_dffre_Q_5_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=byte_controller.bit_controller.cnt[10] R=arst_i
.names byte_controller.bit_controller.cnt_dffre_Q_5_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.cnt_dffre_Q_5_D
10 1
.subckt adder a=byte_controller.bit_controller.cnt[10] b=$true cin=byte_controller.bit_controller.cnt_dffre_Q_6_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.cnt_dffre_Q_5_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.cnt_dffre_Q_5_D_$lut_Y_A
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.cnt_dffre_Q_6_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=byte_controller.bit_controller.cnt[9] R=arst_i
.names byte_controller.bit_controller.cnt_dffre_Q_6_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.cnt_dffre_Q_6_D
10 1
.subckt adder a=byte_controller.bit_controller.cnt[9] b=$true cin=byte_controller.bit_controller.cnt_dffre_Q_7_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.cnt_dffre_Q_6_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.cnt_dffre_Q_6_D_$lut_Y_A
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.cnt_dffre_Q_7_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=byte_controller.bit_controller.cnt[8] R=arst_i
.names byte_controller.bit_controller.cnt_dffre_Q_7_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.cnt_dffre_Q_7_D
10 1
.subckt adder a=byte_controller.bit_controller.cnt[8] b=$true cin=byte_controller.bit_controller.cnt_dffre_Q_8_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.cnt_dffre_Q_7_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.cnt_dffre_Q_7_D_$lut_Y_A
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.cnt_dffre_Q_8_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=byte_controller.bit_controller.cnt[7] R=arst_i
.names byte_controller.bit_controller.cnt_dffre_Q_8_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.cnt_dffre_Q_8_D
10 1
.subckt adder a=byte_controller.bit_controller.cnt[7] b=$true cin=byte_controller.bit_controller.cnt_dffre_Q_9_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.cnt_dffre_Q_8_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.cnt_dffre_Q_8_D_$lut_Y_A
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.cnt_dffre_Q_9_D E=byte_controller.bit_controller.slave_wait_$lut_A_Y Q=byte_controller.bit_controller.cnt[6] R=arst_i
.names byte_controller.bit_controller.cnt_dffre_Q_9_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.cnt_dffre_Q_9_D
10 1
.subckt adder a=byte_controller.bit_controller.cnt[6] b=$true cin=byte_controller.bit_controller.cnt_dffre_Q_10_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.cnt_dffre_Q_9_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.cnt_dffre_Q_9_D_$lut_Y_A
.names byte_controller.bit_controller.cnt_dffre_Q_D_$lut_Y_A TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.cnt_dffre_Q_D
10 1
.subckt adder a=byte_controller.bit_controller.cnt[15] b=$true cin=byte_controller.bit_controller.cnt_dffre_Q_1_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.cnt_dffre_Q_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.cnt_dffre_Q_D_$lut_Y_A
.names byte_controller.bit_controller.sSCL byte_controller.bit_controller.dSCL byte_controller.bit_controller.dout_dffre_Q_E
10 1
.names wb_rst_i scl_padoen_o byte_controller.bit_controller.dSCL byte_controller.bit_controller.sSCL byte_controller.bit_controller.dSCL_$lut_A_1_Y
0000 1
0001 1
0010 1
0011 1
0100 1
0101 1
0111 1
.subckt dffs C=wb_clk_i D=byte_controller.bit_controller.dSCL_dffs_Q_D Q=byte_controller.bit_controller.dSCL S=arst_i
.names byte_controller.bit_controller.sSCL wb_rst_i byte_controller.bit_controller.dSCL_dffs_Q_D
01 1
10 1
11 1
.names byte_controller.bit_controller.dSDA byte_controller.bit_controller.sSCL byte_controller.bit_controller.dSDA_dffs_Q_D byte_controller.bit_controller.sta_condition_dffr_Q_D
110 1
.names byte_controller.bit_controller.sSDA byte_controller.bit_controller.sSCL byte_controller.bit_controller.dSDA wb_rst_i byte_controller.bit_controller.sto_condition_dffr_Q_D
1100 1
.subckt dffs C=wb_clk_i D=byte_controller.bit_controller.dSDA_dffs_Q_D Q=byte_controller.bit_controller.dSDA S=arst_i
.names byte_controller.bit_controller.dout wb_rst_i byte_controller.ack_out_dffre_Q_D
10 1
.subckt dffre C=wb_clk_i D=byte_controller.bit_controller.sSDA E=byte_controller.bit_controller.dout_dffre_Q_E Q=byte_controller.bit_controller.dout R=$false
.names byte_controller.bit_controller.sSCL byte_controller.bit_controller.slave_wait scl_padoen_o byte_controller.bit_controller.dscl_oen byte_controller.bit_controller.slave_wait_dffr_Q_D
0010 1
0100 1
0101 1
0110 1
0111 1
.subckt dff C=wb_clk_i D=scl_padoen_o Q=byte_controller.bit_controller.dscl_oen
.subckt dffse C=wb_clk_i D=byte_controller.bit_controller.fSCL_dffse_Q_D E=byte_controller.bit_controller.fSCL_dffse_Q_E Q=byte_controller.bit_controller.fSCL[2] S=byte_controller.bit_controller.fSCL_dffse_Q_S
.subckt dffse C=wb_clk_i D=byte_controller.bit_controller.fSCL_dffse_Q_1_D E=byte_controller.bit_controller.fSCL_dffse_Q_E Q=byte_controller.bit_controller.fSCL[1] S=byte_controller.bit_controller.fSCL_dffse_Q_1_S
.names byte_controller.bit_controller.fSCL[0] wb_rst_i byte_controller.bit_controller.fSCL_dffse_Q_1_D
01 1
10 1
11 1
.subckt dffse C=wb_clk_i D=byte_controller.bit_controller.fSCL_dffse_Q_2_D E=byte_controller.bit_controller.fSCL_dffse_Q_E Q=byte_controller.bit_controller.fSCL[0] S=byte_controller.bit_controller.fSCL_dffse_Q_2_S
.names byte_controller.bit_controller.fSCL[1] wb_rst_i byte_controller.bit_controller.fSCL_dffse_Q_D
01 1
10 1
11 1
.names wb_rst_i byte_controller.bit_controller.filter_cnt_$lut_A_Y byte_controller.bit_controller.filter_cnt_$lut_A_1_Y byte_controller.bit_controller.filter_cnt_frac_lut6_in_lut6_out byte_controller.bit_controller.fSCL_dffse_Q_E
0111 1
1000 1
1001 1
1010 1
1011 1
1100 1
1101 1
1110 1
1111 1
.subckt dffse C=wb_clk_i D=byte_controller.bit_controller.fSDA_dffse_Q_D E=byte_controller.bit_controller.fSCL_dffse_Q_E Q=byte_controller.bit_controller.fSDA[2] S=byte_controller.bit_controller.fSDA_dffse_Q_S
.subckt dffse C=wb_clk_i D=byte_controller.bit_controller.fSDA_dffse_Q_1_D E=byte_controller.bit_controller.fSCL_dffse_Q_E Q=byte_controller.bit_controller.fSDA[1] S=byte_controller.bit_controller.fSDA_dffse_Q_1_S
.names byte_controller.bit_controller.fSDA[0] wb_rst_i byte_controller.bit_controller.fSDA_dffse_Q_1_D
01 1
10 1
11 1
.subckt dffse C=wb_clk_i D=byte_controller.bit_controller.fSDA_dffse_Q_2_D E=byte_controller.bit_controller.fSCL_dffse_Q_E Q=byte_controller.bit_controller.fSDA[0] S=byte_controller.bit_controller.fSDA_dffse_Q_2_S
.names byte_controller.bit_controller.fSDA[1] wb_rst_i byte_controller.bit_controller.fSDA_dffse_Q_D
01 1
10 1
11 1
.names byte_controller.bit_controller.filter_cnt[9] byte_controller.bit_controller.filter_cnt[8] byte_controller.bit_controller.filter_cnt[7] byte_controller.bit_controller.filter_cnt[6] byte_controller.bit_controller.filter_cnt_$lut_A_Y
0000 1
.names byte_controller.bit_controller.filter_cnt[13] byte_controller.bit_controller.filter_cnt[12] byte_controller.bit_controller.filter_cnt[11] byte_controller.bit_controller.filter_cnt[10] byte_controller.bit_controller.filter_cnt_$lut_A_1_Y
0000 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.filter_cnt_dffr_Q_D Q=byte_controller.bit_controller.filter_cnt[13] R=arst_i
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.filter_cnt_dffr_Q_1_D Q=byte_controller.bit_controller.filter_cnt[12] R=arst_i
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.filter_cnt_dffr_Q_10_D Q=byte_controller.bit_controller.filter_cnt[3] R=arst_i
.names byte_controller.bit_controller.filter_cnt_dffr_Q_10_D_$lut_Y_A byte_controller.bit_controller.fSCL_dffse_Q_E byte_controller.bit_controller.filter_cnt_dffr_Q_10_D
10 1
.subckt adder a=byte_controller.bit_controller.filter_cnt[3] b=$true cin=byte_controller.bit_controller.filter_cnt_dffr_Q_11_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.filter_cnt_dffr_Q_10_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.filter_cnt_dffr_Q_10_D_$lut_Y_A
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.filter_cnt_dffr_Q_11_D Q=byte_controller.bit_controller.filter_cnt[2] R=arst_i
.names byte_controller.bit_controller.filter_cnt_dffr_Q_11_D_$lut_Y_A byte_controller.bit_controller.fSCL_dffse_Q_E byte_controller.bit_controller.filter_cnt_dffr_Q_11_D
10 1
.subckt adder a=byte_controller.bit_controller.filter_cnt[2] b=$true cin=byte_controller.bit_controller.filter_cnt_dffr_Q_12_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.filter_cnt_dffr_Q_11_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.filter_cnt_dffr_Q_11_D_$lut_Y_A
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.filter_cnt_dffr_Q_12_D Q=byte_controller.bit_controller.filter_cnt[1] R=arst_i
.names byte_controller.bit_controller.filter_cnt_dffr_Q_12_D_$lut_Y_A byte_controller.bit_controller.fSCL_dffse_Q_E byte_controller.bit_controller.filter_cnt_dffr_Q_12_D
10 1
.subckt adder a=byte_controller.bit_controller.filter_cnt[1] b=$true cin=byte_controller.bit_controller.filter_cnt_dffr_Q_13_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.filter_cnt_dffr_Q_12_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.filter_cnt_dffr_Q_12_D_$lut_Y_A
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.filter_cnt_dffr_Q_13_D Q=byte_controller.bit_controller.filter_cnt[0] R=arst_i
.names byte_controller.bit_controller.filter_cnt_dffr_Q_13_D_$lut_Y_A byte_controller.bit_controller.fSCL_dffse_Q_E byte_controller.bit_controller.filter_cnt_dffr_Q_13_D
10 1
.subckt adder a=byte_controller.bit_controller.filter_cnt[0] b=$false cin=byte_controller.bit_controller.filter_cnt_dffr_Q_13_D_$lut_Y_A_adder_sumout_cin cout=byte_controller.bit_controller.filter_cnt_dffr_Q_13_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.filter_cnt_dffr_Q_13_D_$lut_Y_A
.subckt adder a=$true b=$true cout=byte_controller.bit_controller.filter_cnt_dffr_Q_13_D_$lut_Y_A_adder_sumout_cin
.names byte_controller.bit_controller.filter_cnt_dffr_Q_1_D_$lut_Y_A byte_controller.bit_controller.fSCL_dffse_Q_E byte_controller.bit_controller.filter_cnt_dffr_Q_1_D
10 1
.subckt adder a=byte_controller.bit_controller.filter_cnt[12] b=$true cin=byte_controller.bit_controller.filter_cnt_dffr_Q_2_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.filter_cnt_dffr_Q_1_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.filter_cnt_dffr_Q_1_D_$lut_Y_A
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.filter_cnt_dffr_Q_2_D Q=byte_controller.bit_controller.filter_cnt[11] R=arst_i
.names byte_controller.bit_controller.filter_cnt_dffr_Q_2_D_$lut_Y_A byte_controller.bit_controller.fSCL_dffse_Q_E byte_controller.bit_controller.filter_cnt_dffr_Q_2_D
10 1
.subckt adder a=byte_controller.bit_controller.filter_cnt[11] b=$true cin=byte_controller.bit_controller.filter_cnt_dffr_Q_3_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.filter_cnt_dffr_Q_2_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.filter_cnt_dffr_Q_2_D_$lut_Y_A
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.filter_cnt_dffr_Q_3_D Q=byte_controller.bit_controller.filter_cnt[10] R=arst_i
.names byte_controller.bit_controller.filter_cnt_dffr_Q_3_D_$lut_Y_A byte_controller.bit_controller.fSCL_dffse_Q_E byte_controller.bit_controller.filter_cnt_dffr_Q_3_D
10 1
.subckt adder a=byte_controller.bit_controller.filter_cnt[10] b=$true cin=byte_controller.bit_controller.filter_cnt_dffr_Q_4_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.filter_cnt_dffr_Q_3_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.filter_cnt_dffr_Q_3_D_$lut_Y_A
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.filter_cnt_dffr_Q_4_D Q=byte_controller.bit_controller.filter_cnt[9] R=arst_i
.names byte_controller.bit_controller.filter_cnt_dffr_Q_4_D_$lut_Y_A byte_controller.bit_controller.fSCL_dffse_Q_E byte_controller.bit_controller.filter_cnt_dffr_Q_4_D
10 1
.subckt adder a=byte_controller.bit_controller.filter_cnt[9] b=$true cin=byte_controller.bit_controller.filter_cnt_dffr_Q_5_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.filter_cnt_dffr_Q_4_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.filter_cnt_dffr_Q_4_D_$lut_Y_A
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.filter_cnt_dffr_Q_5_D Q=byte_controller.bit_controller.filter_cnt[8] R=arst_i
.names byte_controller.bit_controller.filter_cnt_dffr_Q_5_D_$lut_Y_A byte_controller.bit_controller.fSCL_dffse_Q_E byte_controller.bit_controller.filter_cnt_dffr_Q_5_D
10 1
.subckt adder a=byte_controller.bit_controller.filter_cnt[8] b=$true cin=byte_controller.bit_controller.filter_cnt_dffr_Q_6_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.filter_cnt_dffr_Q_5_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.filter_cnt_dffr_Q_5_D_$lut_Y_A
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.filter_cnt_dffr_Q_6_D Q=byte_controller.bit_controller.filter_cnt[7] R=arst_i
.names byte_controller.bit_controller.filter_cnt_dffr_Q_6_D_$lut_Y_A byte_controller.bit_controller.fSCL_dffse_Q_E byte_controller.bit_controller.filter_cnt_dffr_Q_6_D
10 1
.subckt adder a=byte_controller.bit_controller.filter_cnt[7] b=$true cin=byte_controller.bit_controller.filter_cnt_dffr_Q_7_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.filter_cnt_dffr_Q_6_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.filter_cnt_dffr_Q_6_D_$lut_Y_A
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.filter_cnt_dffr_Q_7_D Q=byte_controller.bit_controller.filter_cnt[6] R=arst_i
.names byte_controller.bit_controller.filter_cnt_dffr_Q_7_D_$lut_Y_A byte_controller.bit_controller.fSCL_dffse_Q_E byte_controller.bit_controller.filter_cnt_dffr_Q_7_D
10 1
.subckt adder a=byte_controller.bit_controller.filter_cnt[6] b=$true cin=byte_controller.bit_controller.filter_cnt_dffr_Q_8_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.filter_cnt_dffr_Q_7_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.filter_cnt_dffr_Q_7_D_$lut_Y_A
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.filter_cnt_dffr_Q_8_D Q=byte_controller.bit_controller.filter_cnt[5] R=arst_i
.names byte_controller.bit_controller.filter_cnt_dffr_Q_8_D_$lut_Y_A byte_controller.bit_controller.fSCL_dffse_Q_E byte_controller.bit_controller.filter_cnt_dffr_Q_8_D
10 1
.subckt adder a=byte_controller.bit_controller.filter_cnt[5] b=$true cin=byte_controller.bit_controller.filter_cnt_dffr_Q_9_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.filter_cnt_dffr_Q_8_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.filter_cnt_dffr_Q_8_D_$lut_Y_A
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.filter_cnt_dffr_Q_9_D Q=byte_controller.bit_controller.filter_cnt[4] R=arst_i
.names byte_controller.bit_controller.filter_cnt_dffr_Q_9_D_$lut_Y_A byte_controller.bit_controller.fSCL_dffse_Q_E byte_controller.bit_controller.filter_cnt_dffr_Q_9_D
10 1
.subckt adder a=byte_controller.bit_controller.filter_cnt[4] b=$true cin=byte_controller.bit_controller.filter_cnt_dffr_Q_10_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.filter_cnt_dffr_Q_9_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.filter_cnt_dffr_Q_9_D_$lut_Y_A
.names byte_controller.bit_controller.filter_cnt_dffr_Q_D_$lut_Y_A byte_controller.bit_controller.fSCL_dffse_Q_E byte_controller.bit_controller.filter_cnt_dffr_Q_D
10 1
.subckt adder a=byte_controller.bit_controller.filter_cnt[13] b=$true cin=byte_controller.bit_controller.filter_cnt_dffr_Q_1_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.bit_controller.filter_cnt_dffr_Q_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.bit_controller.filter_cnt_dffr_Q_D_$lut_Y_A
.subckt frac_lut6 in[5]=byte_controller.bit_controller.filter_cnt[0] in[4]=byte_controller.bit_controller.filter_cnt[1] in[3]=byte_controller.bit_controller.filter_cnt[2] in[2]=byte_controller.bit_controller.filter_cnt[3] in[1]=byte_controller.bit_controller.filter_cnt[4] in[0]=byte_controller.bit_controller.filter_cnt[5] lut6_out=byte_controller.bit_controller.filter_cnt_frac_lut6_in_lut6_out
.subckt dffs C=wb_clk_i D=byte_controller.bit_controller.sSCL_dffs_Q_D Q=byte_controller.bit_controller.sSCL S=arst_i
.names wb_rst_i byte_controller.bit_controller.fSCL[0] byte_controller.bit_controller.fSCL[2] byte_controller.bit_controller.fSCL[1] byte_controller.bit_controller.sSCL_dffs_Q_D
0011 1
0101 1
0110 1
0111 1
1000 1
1001 1
1010 1
1011 1
1100 1
1101 1
1110 1
1111 1
.names byte_controller.bit_controller.sSDA wb_rst_i byte_controller.bit_controller.dSDA_dffs_Q_D
01 1
10 1
11 1
.subckt dffs C=wb_clk_i D=byte_controller.bit_controller.sSDA_dffs_Q_D Q=byte_controller.bit_controller.sSDA S=arst_i
.names wb_rst_i byte_controller.bit_controller.fSDA[0] byte_controller.bit_controller.fSDA[2] byte_controller.bit_controller.fSDA[1] byte_controller.bit_controller.sSDA_dffs_Q_D
0011 1
0101 1
0110 1
0111 1
1000 1
1001 1
1010 1
1011 1
1100 1
1101 1
1110 1
1111 1
.subckt dffse C=wb_clk_i D=byte_controller.bit_controller.scl_oen_dffse_Q_D E=byte_controller.bit_controller.scl_oen_dffse_Q_E Q=scl_padoen_o S=byte_controller.bit_controller.scl_oen_dffse_Q_S
.names wb_rst_i byte_controller.bit_controller.scl_oen_dffse_Q_D_$lut_Y_A byte_controller.bit_controller.scl_oen_dffse_Q_D
01 1
10 1
11 1
.subckt frac_lut6 in[5]=byte_controller.bit_controller.c_state[1] in[4]=byte_controller.bit_controller.c_state[4] in[3]=byte_controller.bit_controller.c_state[5] in[2]=byte_controller.bit_controller.c_state[13] in[1]=byte_controller.bit_controller.c_state[8] in[0]=byte_controller.bit_controller.c_state[12] lut6_out=byte_controller.bit_controller.scl_oen_dffse_Q_D_$lut_Y_A
.names wb_rst_i byte_controller.bit_controller.clk_en byte_controller.bit_controller.c_state[17] byte_controller.bit_controller.c_state[0] byte_controller.bit_controller.scl_oen_dffse_Q_E
0100 1
1000 1
1001 1
1010 1
1011 1
1100 1
1101 1
1110 1
1111 1
.subckt dffse C=wb_clk_i D=byte_controller.core_txd_$lut_A_Y E=byte_controller.bit_controller.sda_oen_dffse_Q_E Q=sda_padoen_o S=byte_controller.bit_controller.sda_oen_dffse_Q_S
.names wb_rst_i byte_controller.bit_controller.clk_en byte_controller.bit_controller.c_state[0] byte_controller.bit_controller.sda_oen_dffse_Q_E
010 1
100 1
101 1
110 1
111 1
.names byte_controller.bit_controller.slave_wait TP1_$lut_A_Y_$lut_A_Y byte_controller.bit_controller.slave_wait_$lut_A_Y
00 1
01 1
11 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.slave_wait_dffr_Q_D Q=byte_controller.bit_controller.slave_wait R=arst_i
.names wb_rst_i byte_controller.bit_controller.sto_condition byte_controller.bit_controller.busy byte_controller.bit_controller.sta_condition byte_controller.bit_controller.busy_dffr_Q_D
0001 1
0010 1
0011 1
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.sta_condition_dffr_Q_D Q=byte_controller.bit_controller.sta_condition R=arst_i
.subckt dffr C=wb_clk_i D=byte_controller.bit_controller.sto_condition_dffr_Q_D Q=byte_controller.bit_controller.sto_condition R=arst_i
.subckt dffr C=wb_clk_i D=byte_controller.c_state_dffr_Q_D Q=byte_controller.c_state[6] R=arst_i
.subckt dffr C=wb_clk_i D=byte_controller.c_state_dffr_Q_1_D Q=byte_controller.c_state[5] R=arst_i
.names byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[4] byte_controller.c_state[5] byte_controller.c_state_dffr_Q_D_$lut_Y_A_1 byte_controller.c_state_dffr_Q_1_D
000 1
001 1
010 1
011 1
111 1
.subckt frac_lut6 in[5]=byte_controller.c_state[6] in[4]=byte_controller.bit_controller.cmd_ack in[3]=byte_controller.c_state_dffr_Q_4_D_$lut_Y_A_$lut_Y_A_1[2] in[2]=byte_controller.c_state_dffr_Q_4_D_$lut_Y_A_$lut_Y_A_1[3] in[1]=wb_rst_i in[0]=byte_controller.read lut6_out=byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[4]
.subckt dffr C=wb_clk_i D=byte_controller.c_state_dffr_Q_2_D Q=byte_controller.c_state[4] R=arst_i
.names byte_controller.shift_dffr_Q_D_$lut_Y_A_frac_lut6_in_lut6_out[4] byte_controller.c_state[4] byte_controller.c_state_dffr_Q_D_$lut_Y_A_1 byte_controller.c_state_dffr_Q_2_D
011 1
100 1
101 1
110 1
111 1
.subckt dffr C=wb_clk_i D=byte_controller.c_state_dffr_Q_3_D Q=byte_controller.c_state[3] R=arst_i
.names byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[1] byte_controller.c_state[3] byte_controller.c_state_dffr_Q_D_$lut_Y_A_1 byte_controller.c_state[4] byte_controller.c_state[5] byte_controller.c_state_dffr_Q_3_D
01100 1
01101 1
01110 1
01111 1
10001 1
10010 1
10011 1
10101 1
10110 1
10111 1
11001 1
11010 1
11011 1
11100 1
11101 1
11110 1
11111 1
.subckt dffr C=wb_clk_i D=byte_controller.c_state_dffr_Q_4_D Q=byte_controller.c_state[2] R=arst_i
.names byte_controller.c_state_dffr_Q_4_D_$lut_Y_A byte_controller.c_state[2] byte_controller.c_state_dffr_Q_D_$lut_Y_A_1 byte_controller.c_state_dffr_Q_4_D
000 1
001 1
010 1
011 1
111 1
.names wb_rst_i byte_controller.c_state_dffr_Q_4_D_$lut_Y_A_$lut_Y_A byte_controller.c_state_dffr_Q_4_D_$lut_Y_A_$lut_Y_A_1[2] byte_controller.write byte_controller.read byte_controller.c_state_dffr_Q_4_D_$lut_Y_A
00000 1
00001 1
00010 1
00011 1
00101 1
00110 1
00111 1
10000 1
10001 1
10010 1
10011 1
10100 1
10101 1
10110 1
10111 1
11000 1
11001 1
11010 1
11011 1
11100 1
11101 1
11110 1
11111 1
.names byte_controller.stop byte_controller.bit_controller.cmd_ack byte_controller.c_state[3] byte_controller.c_state_dffr_Q_4_D_$lut_Y_A_$lut_Y_A
111 1
.subckt frac_lut6 in[5]=byte_controller.dcnt[2] in[4]=byte_controller.dcnt[1] in[3]=byte_controller.dcnt[0] in[2]=wb_rst_i in[1]=byte_controller.c_state[5] in[0]=byte_controller.bit_controller.cmd_ack lut6_out=byte_controller.c_state_dffr_Q_4_D_$lut_Y_A_$lut_Y_A_1[3]
.subckt dffr C=wb_clk_i D=byte_controller.shift_frac_lut6_in_in_$lut_A_Y[3] Q=byte_controller.c_state[1] R=arst_i
.names byte_controller.c_state_dffr_Q_D_$lut_Y_A byte_controller.c_state[6] byte_controller.c_state_dffr_Q_D_$lut_Y_A_1 byte_controller.c_state_dffr_Q_D
011 1
100 1
101 1
110 1
111 1
.names wb_rst_i byte_controller.bit_controller.cmd_ack byte_controller.c_state_dffr_Q_D_$lut_Y_A_1
00 1
.subckt dffs C=wb_clk_i D=byte_controller.c_state_dffs_Q_D Q=byte_controller.c_state[0] S=arst_i
.names wb_rst_i byte_controller.shift_frac_lut6_in_in_$lut_A_Y[5] byte_controller.c_state_dffs_Q_D_$lut_Y_A byte_controller.c_state_dffs_Q_D
001 1
010 1
011 1
100 1
101 1
110 1
111 1
.names byte_controller.c_state_dffs_Q_D_$lut_Y_A byte_controller.c_state_dffs_Q_D_$lut_Y_A_$lut_A_A byte_controller.c_state[0] byte_controller.c_state[1] byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[3]
0000 1
0001 1
0010 1
0011 1
0101 1
0110 1
0111 1
.subckt frac_lut6 in[5]=byte_controller.c_state[2] in[4]=byte_controller.c_state[3] in[3]=byte_controller.c_state[6] in[2]=byte_controller.c_state[4] in[1]=byte_controller.c_state[5] in[0]=wb_rst_i lut6_out=byte_controller.c_state_dffs_Q_D_$lut_Y_A_$lut_A_A
.subckt frac_lut6 in[5]=byte_controller.write in[4]=byte_controller.read in[3]=byte_controller.stop in[2]=byte_controller.cmd_ack in[1]=wb_rst_i in[0]=byte_controller.c_state[0] lut6_out=byte_controller.c_state_dffs_Q_D_$lut_Y_A
.subckt dffr C=wb_clk_i D=byte_controller.shift_frac_lut6_in_in_$lut_A_Y[5] Q=byte_controller.cmd_ack R=arst_i
.subckt dffr C=wb_clk_i D=byte_controller.core_cmd_dffr_Q_D Q=byte_controller.core_cmd[4] R=arst_i
.subckt dffr C=wb_clk_i D=byte_controller.core_cmd_dffr_Q_1_D Q=byte_controller.core_cmd[3] R=arst_i
.names byte_controller.c_state_dffr_Q_4_D_$lut_Y_A byte_controller.core_cmd[3] byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[3] byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[2] byte_controller.core_cmd_dffr_Q_1_D
0000 1
0001 1
0010 1
0011 1
0100 1
0101 1
0110 1
0111 1
1100 1
1101 1
1110 1
.subckt dffr C=wb_clk_i D=byte_controller.core_cmd_dffr_Q_2_D Q=byte_controller.core_cmd[2] R=arst_i
.subckt frac_lut6 in[5]=byte_controller.c_state[5] in[4]=byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[1] in[3]=byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[2] in[2]=byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[3] in[1]=byte_controller.shift_dffr_Q_D_$lut_Y_A_frac_lut6_in_lut6_out[4] in[0]=byte_controller.core_cmd[2] lut6_out=byte_controller.core_cmd_dffr_Q_2_D
.subckt dffr C=wb_clk_i D=byte_controller.core_cmd_dffr_Q_3_D Q=byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[5] R=arst_i
.subckt frac_lut6 in[5]=byte_controller.c_state[4] in[4]=byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[1] in[3]=byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[2] in[2]=byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[3] in[1]=byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[4] in[0]=byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[5] lut6_out=byte_controller.core_cmd_dffr_Q_3_D
.names byte_controller.c_state_dffr_Q_D_$lut_Y_A byte_controller.core_cmd[4] byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[2] byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[3] byte_controller.core_cmd_dffr_Q_D
0100 1
0101 1
0110 1
1000 1
1001 1
1010 1
1011 1
1100 1
1101 1
1110 1
1111 1
.subckt dffs C=wb_clk_i D=byte_controller.core_cmd_dffs_Q_D Q=byte_controller.core_cmd[0] S=arst_i
.subckt frac_lut6 in[5]=byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[2] in[4]=byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[3] in[3]=byte_controller.core_cmd[0] in[2]=byte_controller.shift_frac_lut6_in_in_$lut_A_Y[3] in[1]=wb_rst_i in[0]=byte_controller.shift_frac_lut6_in_in_$lut_A_Y[5] lut6_out=byte_controller.core_cmd_dffs_Q_D
.names byte_controller.core_txd_$lut_A_A wb_rst_i byte_controller.bit_controller.din byte_controller.core_txd_$lut_A_A_1 byte_controller.bit_controller.c_state[16] byte_controller.core_txd_$lut_A_Y
00100 1
00101 1
00110 1
00111 1
01000 1
01001 1
01010 1
01011 1
01100 1
01101 1
01110 1
01111 1
10000 1
10001 1
10011 1
10100 1
10101 1
10111 1
11000 1
11001 1
11010 1
11011 1
11100 1
11101 1
11110 1
11111 1
.names byte_controller.bit_controller.c_state[4] byte_controller.bit_controller.c_state[3] byte_controller.bit_controller.c_state[2] byte_controller.bit_controller.c_state[1] byte_controller.core_txd_$lut_A_A
0000 1
.subckt frac_lut6 in[5]=byte_controller.bit_controller.c_state[5] in[4]=byte_controller.bit_controller.c_state[9] in[3]=byte_controller.bit_controller.c_state[6] in[2]=byte_controller.bit_controller.c_state[7] in[1]=byte_controller.bit_controller.c_state[8] in[0]=byte_controller.bit_controller.c_state[17] lut6_out=byte_controller.core_txd_$lut_A_A_1
.subckt dffr C=wb_clk_i D=byte_controller.core_txd_dffr_Q_D Q=byte_controller.bit_controller.din R=arst_i
.subckt dffre C=wb_clk_i D=byte_controller.dcnt_dffre_Q_D E=byte_controller.dcnt_dffre_Q_E Q=byte_controller.dcnt[2] R=arst_i
.subckt dffre C=wb_clk_i D=byte_controller.dcnt_dffre_Q_1_D E=byte_controller.dcnt_dffre_Q_E Q=byte_controller.dcnt[1] R=arst_i
.names wb_rst_i byte_controller.ld byte_controller.dcnt_dffre_Q_1_D_$lut_Y_A byte_controller.dcnt_dffre_Q_1_D
001 1
010 1
011 1
.subckt adder a=byte_controller.dcnt[1] b=$true cin=byte_controller.dcnt_dffre_Q_2_D_$lut_Y_A_adder_sumout_cout cout=byte_controller.dcnt_dffre_Q_D_$lut_Y_A_adder_sumout_cin sumout=byte_controller.dcnt_dffre_Q_1_D_$lut_Y_A
.subckt dffre C=wb_clk_i D=byte_controller.dcnt_dffre_Q_2_D E=byte_controller.dcnt_dffre_Q_E Q=byte_controller.dcnt[0] R=arst_i
.names wb_rst_i byte_controller.ld byte_controller.dcnt_dffre_Q_2_D_$lut_Y_A byte_controller.dcnt_dffre_Q_2_D
001 1
010 1
011 1
.subckt adder a=byte_controller.dcnt[0] b=$false cin=byte_controller.dcnt_dffre_Q_2_D_$lut_Y_A_adder_sumout_cin cout=byte_controller.dcnt_dffre_Q_2_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.dcnt_dffre_Q_2_D_$lut_Y_A
.subckt adder a=$true b=$true cout=byte_controller.dcnt_dffre_Q_2_D_$lut_Y_A_adder_sumout_cin
.names wb_rst_i byte_controller.ld byte_controller.dcnt_dffre_Q_D_$lut_Y_A byte_controller.dcnt_dffre_Q_D
001 1
010 1
011 1
.subckt adder a=byte_controller.dcnt[2] b=$true cin=byte_controller.dcnt_dffre_Q_D_$lut_Y_A_adder_sumout_cin cout=byte_controller.dcnt_dffre_Q_D_$lut_Y_A_adder_sumout_cout sumout=byte_controller.dcnt_dffre_Q_D_$lut_Y_A
.subckt dffr C=wb_clk_i D=byte_controller.ld_dffr_Q_D Q=byte_controller.ld R=arst_i
.names byte_controller.c_state[6] wb_rst_i byte_controller.bit_controller.cmd_ack byte_controller.ld_dffr_Q_D_$lut_Y_A byte_controller.c_state[0] byte_controller.ld_dffr_Q_D
00011 1
00111 1
10100 1
10101 1
10110 1
10111 1
.names byte_controller.ld_dffr_Q_D_$lut_Y_A byte_controller.start byte_controller.c_state[0] wb_rst_i byte_controller.c_state_dffr_Q_D_$lut_Y_A
1110 1
.names byte_controller.cmd_ack byte_controller.write byte_controller.stop byte_controller.read byte_controller.ld_dffr_Q_D_$lut_Y_A
0001 1
0010 1
0011 1
0100 1
0101 1
0110 1
0111 1
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_Y[5] E=byte_controller.ack_in_dffre_Q_E_$lut_A_Y Q=byte_controller.read R=arst_i
.names byte_controller.shift byte_controller.ld wb_rst_i byte_controller.dcnt_dffre_Q_E
001 1
010 1
011 1
100 1
101 1
110 1
111 1
.subckt dffr C=wb_clk_i D=byte_controller.shift_dffr_Q_D Q=byte_controller.shift R=arst_i
.names wb_rst_i byte_controller.bit_controller.cmd_ack byte_controller.shift_dffr_Q_D_$lut_Y_A[4] byte_controller.c_state[3] byte_controller.c_state[5] byte_controller.shift_dffr_Q_D
00100 1
00101 1
00110 1
00111 1
01001 1
01010 1
01011 1
01100 1
01101 1
01110 1
01111 1
.names byte_controller.bit_controller.cmd_ack byte_controller.c_state[4] byte_controller.dcnt[0] byte_controller.dcnt[1] byte_controller.dcnt[2] byte_controller.shift_dffr_Q_D_$lut_Y_A[4]
11001 1
11010 1
11011 1
11100 1
11101 1
11110 1
11111 1
.subckt frac_lut6 in[5]=byte_controller.read in[4]=byte_controller.bit_controller.cmd_ack in[3]=byte_controller.c_state[6] in[2]=byte_controller.c_state[1] in[1]=byte_controller.shift_dffr_Q_D_$lut_Y_A[4] in[0]=wb_rst_i lut6_out=byte_controller.shift_dffr_Q_D_$lut_Y_A_frac_lut6_in_lut6_out[4]
.names byte_controller.bit_controller.cmd_ack byte_controller.dcnt[2] byte_controller.dcnt[1] byte_controller.dcnt[0] wb_rst_i byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[1]
10000 1
.subckt frac_lut6 in[5]=byte_controller.c_state[1] in[4]=byte_controller.c_state[0] in[3]=byte_controller.shift_frac_lut6_in_in[2] in[2]=byte_controller.shift in[1]=byte_controller.ld in[0]=byte_controller.shift_dffr_Q_D_$lut_Y_A[4] lut6_out=byte_controller.shift_frac_lut6_in_lut6_out[5]
.names byte_controller.c_state_dffr_Q_D_$lut_Y_A_1 byte_controller.shift_frac_lut6_in_in[2] byte_controller.c_state[4] byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[2]
000 1
001 1
010 1
011 1
110 1
.names byte_controller.bit_controller.cmd_ack wb_rst_i byte_controller.c_state[2] byte_controller.c_state[3] byte_controller.stop byte_controller.shift_frac_lut6_in_in_$lut_A_Y[5]
10010 1
10100 1
10101 1
10110 1
10111 1
.names byte_controller.c_state_dffr_Q_4_D_$lut_Y_A_$lut_Y_A_1[2] byte_controller.write wb_rst_i byte_controller.read byte_controller.shift_frac_lut6_in_in_$lut_A_Y[3]
1100 1
.names byte_controller.c_state[5] byte_controller.c_state[6] byte_controller.c_state[3] byte_controller.c_state[2] byte_controller.shift_frac_lut6_in_in[2]
0000 1
.subckt dffr C=wb_clk_i D=byte_controller.sr_dffr_Q_D Q=byte_controller.dout[7] R=arst_i
.subckt dffr C=wb_clk_i D=byte_controller.sr_dffr_Q_1_D Q=byte_controller.dout[6] R=arst_i
.subckt frac_lut6 in[5]=byte_controller.dout[6] in[4]=byte_controller.din[6] in[3]=byte_controller.dout[5] in[2]=byte_controller.ld in[1]=wb_rst_i in[0]=byte_controller.shift_frac_lut6_in_lut6_out[5] lut6_out=byte_controller.sr_dffr_Q_1_D
.subckt dffr C=wb_clk_i D=byte_controller.sr_dffr_Q_2_D Q=byte_controller.dout[5] R=arst_i
.subckt frac_lut6 in[5]=byte_controller.dout[5] in[4]=byte_controller.din[5] in[3]=byte_controller.dout[4] in[2]=byte_controller.ld in[1]=wb_rst_i in[0]=byte_controller.shift_frac_lut6_in_lut6_out[5] lut6_out=byte_controller.sr_dffr_Q_2_D
.subckt dffr C=wb_clk_i D=byte_controller.sr_dffr_Q_3_D Q=byte_controller.dout[4] R=arst_i
.subckt frac_lut6 in[5]=byte_controller.dout[4] in[4]=byte_controller.din[4] in[3]=byte_controller.dout[3] in[2]=byte_controller.ld in[1]=wb_rst_i in[0]=byte_controller.shift_frac_lut6_in_lut6_out[5] lut6_out=byte_controller.sr_dffr_Q_3_D
.subckt dffr C=wb_clk_i D=byte_controller.sr_dffr_Q_4_D Q=byte_controller.dout[3] R=arst_i
.subckt frac_lut6 in[5]=byte_controller.dout[3] in[4]=byte_controller.din[3] in[3]=byte_controller.dout[2] in[2]=byte_controller.ld in[1]=wb_rst_i in[0]=byte_controller.shift_frac_lut6_in_lut6_out[5] lut6_out=byte_controller.sr_dffr_Q_4_D
.subckt dffr C=wb_clk_i D=byte_controller.sr_dffr_Q_5_D Q=byte_controller.dout[2] R=arst_i
.subckt frac_lut6 in[5]=byte_controller.dout[2] in[4]=byte_controller.din[2] in[3]=byte_controller.dout[1] in[2]=byte_controller.ld in[1]=wb_rst_i in[0]=byte_controller.shift_frac_lut6_in_lut6_out[5] lut6_out=byte_controller.sr_dffr_Q_5_D
.subckt dffr C=wb_clk_i D=byte_controller.sr_dffr_Q_6_D Q=byte_controller.dout[1] R=arst_i
.subckt frac_lut6 in[5]=byte_controller.dout[1] in[4]=byte_controller.din[1] in[3]=byte_controller.dout[0] in[2]=byte_controller.ld in[1]=wb_rst_i in[0]=byte_controller.shift_frac_lut6_in_lut6_out[5] lut6_out=byte_controller.sr_dffr_Q_6_D
.subckt dffr C=wb_clk_i D=byte_controller.sr_dffr_Q_7_D Q=byte_controller.dout[0] R=arst_i
.subckt frac_lut6 in[5]=byte_controller.dout[0] in[4]=byte_controller.din[0] in[3]=byte_controller.bit_controller.dout in[2]=byte_controller.ld in[1]=wb_rst_i in[0]=byte_controller.shift_frac_lut6_in_lut6_out[5] lut6_out=byte_controller.sr_dffr_Q_7_D
.subckt frac_lut6 in[5]=byte_controller.dout[7] in[4]=byte_controller.din[7] in[3]=byte_controller.dout[6] in[2]=byte_controller.ld in[1]=wb_rst_i in[0]=byte_controller.shift_frac_lut6_in_lut6_out[5] lut6_out=byte_controller.sr_dffr_Q_D
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_Y[7] E=byte_controller.ack_in_dffre_Q_E_$lut_A_Y Q=byte_controller.start R=arst_i
.subckt frac_lut6 in[5]=byte_controller.write in[4]=byte_controller.stop in[3]=byte_controller.read in[2]=byte_controller.start in[1]=byte_controller.cmd_ack in[0]=byte_controller.c_state[0] lut6_out=byte_controller.c_state_dffr_Q_4_D_$lut_Y_A_$lut_Y_A_1[2]
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_Y[6] E=byte_controller.ack_in_dffre_Q_E_$lut_A_Y Q=byte_controller.stop R=arst_i
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_Y[4] E=byte_controller.ack_in_dffre_Q_E_$lut_A_Y Q=byte_controller.write R=arst_i
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_Y[2] E=cr_dffre_Q_E Q=cr[2] R=arst_i
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_Y[1] E=cr_dffre_Q_E Q=tip_$lut_A_Y[1] R=arst_i
.subckt frac_lut6 in[5]=wb_adr_i[2] in[4]=wb_adr_i[0] in[3]=wb_adr_i[1] in[2]=wb_rst_i in[1]=wb_ack_o in[0]=wb_we_i lut6_out=cr_dffre_Q_E
.subckt frac_lut6 in[5]=byte_controller.din[2] in[4]=cr[2] in[3]=byte_controller.dout[2] in[2]=wb_adr_i[1] in[1]=wb_adr_i[0] in[0]=wb_adr_i[2] lut6_out=cr_frac_lut6_in_lut6_out[2]
.names byte_controller.bit_controller.busy_frac_lut6_in_lut6_out wb_adr_i[1] wb_adr_i[0] byte_controller.dout[6] wb_adr_i[2] cr_frac_lut6_in_lut6_out[6]
00000 1
00001 1
00010 1
00011 1
00100 1
00101 1
00110 1
00111 1
01000 1
01001 1
01010 1
01011 1
01100 1
01101 1
01110 1
01111 1
11110 1
.names al_frac_lut6_in_lut6_out wb_adr_i[1] wb_adr_i[0] byte_controller.dout[5] wb_adr_i[2] cr_frac_lut6_in_lut6_out[5]
00000 1
00001 1
00010 1
00011 1
00100 1
00101 1
00110 1
00111 1
01000 1
01001 1
01010 1
01011 1
01100 1
01101 1
01110 1
01111 1
11110 1
.subckt frac_lut6 in[5]=byte_controller.din[4] in[4]=byte_controller.write in[3]=byte_controller.dout[4] in[2]=wb_adr_i[1] in[1]=wb_adr_i[0] in[0]=wb_adr_i[2] lut6_out=cr_frac_lut6_in_lut6_out[4]
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_Y[0] E=cr_dffre_Q_E Q=iack R=arst_i
.subckt frac_lut6 in[5]=byte_controller.din[0] in[4]=iack in[3]=irq_flag_$lut_A_Y[2] in[2]=wb_adr_i[1] in[1]=wb_adr_i[0] in[0]=wb_adr_i[2] lut6_out=cr_frac_lut6_in_lut6_out[0]
.names wb_adr_i[2] wb_adr_i[0] wb_adr_i[1] byte_controller.dout[0] irq_flag irq_flag_$lut_A_Y[2]
00000 1
00001 1
00010 1
00011 1
00100 1
00101 1
00110 1
00111 1
01000 1
01001 1
01010 1
01011 1
01100 1
01101 1
10000 1
10010 1
10100 1
10101 1
10110 1
10111 1
11000 1
11001 1
11010 1
11011 1
11100 1
11101 1
11110 1
11111 1
.subckt dffr C=wb_clk_i D=irq_flag_dffr_Q_D Q=irq_flag R=arst_i
.names iack wb_rst_i byte_controller.cmd_ack irq_flag irq_flag_dffr_Q_D
0001 1
0010 1
0011 1
.names wb_adr_i[2] wb_adr_i[1] wb_adr_i[0] byte_controller.dout[7] rxack rxack_$lut_A_Y[2]
01000 1
01001 1
01010 1
01011 1
01110 1
01111 1
10001 1
10011 1
.subckt frac_lut6 in[5]=byte_controller.din[7] in[4]=byte_controller.start in[3]=rxack_$lut_A_Y[2] in[2]=wb_adr_i[1] in[1]=wb_adr_i[0] in[0]=wb_adr_i[2] lut6_out=cr_frac_lut6_in_lut6_out[7]
.subckt dffr C=wb_clk_i D=rxack_dffr_Q_D Q=rxack R=arst_i
.names scl_pad_i wb_rst_i scl_pad_i_$lut_A_Y
10 1
.names sda_pad_i wb_rst_i sda_pad_i_$lut_A_Y
10 1
.names wb_adr_i[2] wb_adr_i[0] wb_adr_i[1] byte_controller.dout[1] tip_o tip_$lut_A_Y[2]
00000 1
00001 1
00010 1
00011 1
00100 1
00101 1
00110 1
00111 1
01000 1
01001 1
01010 1
01011 1
01100 1
01101 1
10000 1
10010 1
10100 1
10101 1
10110 1
10111 1
11000 1
11001 1
11010 1
11011 1
11100 1
11101 1
11110 1
11111 1
.subckt frac_lut6 in[5]=byte_controller.din[1] in[4]=tip_$lut_A_Y[1] in[3]=tip_$lut_A_Y[2] in[2]=wb_adr_i[1] in[1]=wb_adr_i[0] in[0]=wb_adr_i[2] lut6_out=cr_frac_lut6_in_lut6_out[1]
.subckt dffr C=wb_clk_i D=tip_dffr_Q_D Q=tip_o R=arst_i
.names wb_rst_i byte_controller.read byte_controller.write tip_dffr_Q_D
001 1
010 1
011 1
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_7_Y[7] E=txr_dffre_Q_E Q=byte_controller.din[7] R=arst_i
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_7_Y[6] E=txr_dffre_Q_E Q=byte_controller.din[6] R=arst_i
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_7_Y[5] E=txr_dffre_Q_E Q=byte_controller.din[5] R=arst_i
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_7_Y[4] E=txr_dffre_Q_E Q=byte_controller.din[4] R=arst_i
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_7_Y[3] E=txr_dffre_Q_E Q=byte_controller.din[3] R=arst_i
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_7_Y[2] E=txr_dffre_Q_E Q=byte_controller.din[2] R=arst_i
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_7_Y[1] E=txr_dffre_Q_E Q=byte_controller.din[1] R=arst_i
.subckt dffre C=wb_clk_i D=wb_dat_i_$lut_A_7_Y[0] E=txr_dffre_Q_E Q=byte_controller.din[0] R=arst_i
.subckt frac_lut6 in[5]=wb_adr_i[2] in[4]=wb_ack_o in[3]=wb_we_i in[2]=wb_adr_i[0] in[1]=wb_adr_i[1] in[0]=wb_rst_i lut6_out=txr_dffre_Q_E
.subckt dff C=wb_clk_i D=wb_ack_i_dff_Q_D Q=wb_ack_o
.names wb_stb_i wb_cyc_i wb_ack_o wb_ack_i_dff_Q_D
110 1
.names wb_dat_i[3] wb_rst_i wb_dat_i_$lut_A_7_Y[3]
10 1
.names wb_dat_i[0] wb_rst_i wb_dat_i_$lut_A_7_Y[0]
10 1
.names wb_dat_i[7] wb_rst_i wb_dat_i_$lut_A_7_Y[7]
10 1
.names wb_dat_i[6] wb_rst_i wb_dat_i_$lut_A_7_Y[6]
10 1
.names wb_dat_i[5] wb_rst_i wb_dat_i_$lut_A_7_Y[5]
10 1
.names wb_dat_i[4] wb_rst_i wb_dat_i_$lut_A_7_Y[4]
10 1
.names wb_dat_i[2] wb_rst_i wb_dat_i_$lut_A_7_Y[2]
10 1
.names wb_dat_i[1] wb_rst_i wb_dat_i_$lut_A_7_Y[1]
10 1
.names wb_we_i wb_ack_o wb_dat_i_$lut_A_7_Y[0] wb_dat_i_$lut_A_Y[0]
111 1
.names wb_we_i wb_ack_o wb_dat_i_$lut_A_7_Y[7] wb_dat_i_$lut_A_Y[7]
111 1
.names wb_we_i wb_ack_o wb_dat_i_$lut_A_7_Y[6] wb_dat_i_$lut_A_Y[6]
111 1
.names wb_we_i wb_ack_o wb_dat_i_$lut_A_7_Y[5] wb_dat_i_$lut_A_Y[5]
111 1
.names wb_we_i wb_ack_o wb_dat_i_$lut_A_7_Y[4] wb_dat_i_$lut_A_Y[4]
111 1
.names wb_we_i wb_ack_o wb_dat_i_$lut_A_7_Y[2] wb_dat_i_$lut_A_Y[2]
111 1
.names wb_we_i wb_ack_o wb_dat_i_$lut_A_7_Y[1] wb_dat_i_$lut_A_Y[1]
111 1
.subckt dff C=wb_clk_i D=cr_frac_lut6_in_lut6_out[7] Q=wb_dat_o[7]
.subckt dff C=wb_clk_i D=cr_frac_lut6_in_lut6_out[6] Q=wb_dat_o[6]
.subckt dff C=wb_clk_i D=cr_frac_lut6_in_lut6_out[5] Q=wb_dat_o[5]
.subckt dff C=wb_clk_i D=cr_frac_lut6_in_lut6_out[4] Q=wb_dat_o[4]
.subckt dff C=wb_clk_i D=cr_frac_lut6_in_lut6_out[3] Q=wb_dat_o[3]
.subckt dff C=wb_clk_i D=cr_frac_lut6_in_lut6_out[2] Q=wb_dat_o[2]
.subckt dff C=wb_clk_i D=cr_frac_lut6_in_lut6_out[1] Q=wb_dat_o[1]
.subckt dff C=wb_clk_i D=cr_frac_lut6_in_lut6_out[0] Q=wb_dat_o[0]
.names byte_controller.din[1] tip_$lut_A_Y[0]
1 1
.names wb_adr_i[1] tip_$lut_A_Y[3]
1 1
.names wb_adr_i[0] tip_$lut_A_Y[4]
1 1
.names wb_adr_i[2] tip_$lut_A_Y[5]
1 1
.names byte_controller.read byte_controller.shift_dffr_Q_D_$lut_Y_A[0]
1 1
.names byte_controller.bit_controller.cmd_ack byte_controller.shift_dffr_Q_D_$lut_Y_A[1]
1 1
.names byte_controller.c_state[6] byte_controller.shift_dffr_Q_D_$lut_Y_A[2]
1 1
.names byte_controller.c_state[1] byte_controller.shift_dffr_Q_D_$lut_Y_A[3]
1 1
.names wb_rst_i byte_controller.shift_dffr_Q_D_$lut_Y_A[5]
1 1
.names byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[2] byte_controller.shift_frac_lut6_in_in_$lut_A_Y[0]
1 1
.names byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[3] byte_controller.shift_frac_lut6_in_in_$lut_A_Y[1]
1 1
.names byte_controller.core_cmd[0] byte_controller.shift_frac_lut6_in_in_$lut_A_Y[2]
1 1
.names wb_rst_i byte_controller.shift_frac_lut6_in_in_$lut_A_Y[4]
1 1
.names byte_controller.c_state[6] byte_controller.c_state_dffr_Q_4_D_$lut_Y_A_$lut_Y_A_1[0]
1 1
.names byte_controller.bit_controller.cmd_ack byte_controller.c_state_dffr_Q_4_D_$lut_Y_A_$lut_Y_A_1[1]
1 1
.names wb_rst_i byte_controller.c_state_dffr_Q_4_D_$lut_Y_A_$lut_Y_A_1[4]
1 1
.names byte_controller.read byte_controller.c_state_dffr_Q_4_D_$lut_Y_A_$lut_Y_A_1[5]
1 1
.names byte_controller.c_state[4] byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[0]
1 1
.names byte_controller.din[0] irq_flag_$lut_A_Y[0]
1 1
.names iack irq_flag_$lut_A_Y[1]
1 1
.names wb_adr_i[1] irq_flag_$lut_A_Y[3]
1 1
.names wb_adr_i[0] irq_flag_$lut_A_Y[4]
1 1
.names wb_adr_i[2] irq_flag_$lut_A_Y[5]
1 1
.names byte_controller.dout[1] byte_controller.shift_frac_lut6_in_lut6_out[0]
1 1
.names byte_controller.din[1] byte_controller.shift_frac_lut6_in_lut6_out[1]
1 1
.names byte_controller.dout[0] byte_controller.shift_frac_lut6_in_lut6_out[2]
1 1
.names byte_controller.ld byte_controller.shift_frac_lut6_in_lut6_out[3]
1 1
.names wb_rst_i byte_controller.shift_frac_lut6_in_lut6_out[4]
1 1
.names byte_controller.c_state[1] byte_controller.shift_frac_lut6_in_in[0]
1 1
.names byte_controller.c_state[0] byte_controller.shift_frac_lut6_in_in[1]
1 1
.names byte_controller.shift byte_controller.shift_frac_lut6_in_in[3]
1 1
.names byte_controller.ld byte_controller.shift_frac_lut6_in_in[4]
1 1
.names byte_controller.shift_dffr_Q_D_$lut_Y_A[4] byte_controller.shift_frac_lut6_in_in[5]
1 1
.names byte_controller.din[7] rxack_$lut_A_Y[0]
1 1
.names byte_controller.start rxack_$lut_A_Y[1]
1 1
.names wb_adr_i[1] rxack_$lut_A_Y[3]
1 1
.names wb_adr_i[0] rxack_$lut_A_Y[4]
1 1
.names wb_adr_i[2] rxack_$lut_A_Y[5]
1 1
.names TP1 byte_controller.bit_controller.cnt[0]
1 1
.names TP2 byte_controller.bit_controller.cnt[1]
1 1
.names byte_controller.c_state[5] byte_controller.shift_dffr_Q_D_$lut_Y_A_frac_lut6_in_lut6_out[0]
1 1
.names byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[1] byte_controller.shift_dffr_Q_D_$lut_Y_A_frac_lut6_in_lut6_out[1]
1 1
.names byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[2] byte_controller.shift_dffr_Q_D_$lut_Y_A_frac_lut6_in_lut6_out[2]
1 1
.names byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[3] byte_controller.shift_dffr_Q_D_$lut_Y_A_frac_lut6_in_lut6_out[3]
1 1
.names byte_controller.core_cmd[2] byte_controller.shift_dffr_Q_D_$lut_Y_A_frac_lut6_in_lut6_out[5]
1 1
.names byte_controller.c_state_dffr_Q_1_D_$lut_Y_A[5] byte_controller.core_cmd[1]
1 1
.names iack cr[0]
1 1
.names tip_$lut_A_Y[1] cr[1]
1 1
.names byte_controller.ack_in cr[3]
1 1
.names byte_controller.write cr[4]
1 1
.names byte_controller.read cr[5]
1 1
.names byte_controller.stop cr[6]
1 1
.names byte_controller.start cr[7]
1 1
.names $false scl_pad_o
1 1
.names $false sda_pad_o
1 1
.names wb_dat_i_$lut_A_7_Y[3] wb_dat_i_$lut_A_Y[3]
1 1
.names $false wb_inta_o
1 1
.end
